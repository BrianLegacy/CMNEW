package ke.co.mspace.nonsmppmanager.invalids;
// Generated May 25, 2017 9:05:55 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionBindingListener;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Tuser generated by hbm2java
 */
@Entity
@Table(name = "tUSER",
        uniqueConstraints = @UniqueConstraint(columnNames = "username")
)
public class Tuser implements java.io.Serializable, HttpSessionBindingListener {

    private Long id;
    private Character admin;
    private String agent;
    private int alertThreshold;
    private String contactNumber;
    private String contractNum;
    private Date dateUpdated;
    //private Integer departmentNo;
    private String destinationAddr;
    private String emailAddress;
    private Boolean enableEmailAlert;
    private Date endDate;
    private String firstname;
    //private Integer jobTitleNo;
    private Date lastReceived;
    private long lastReceivedId;
    private Date lastSend;
    private Long lastSentId;
    private boolean loggedIn;
    private Date loggedInTime;
    private long maxDaily;
    private long maxMonthly;
    private long maxTotal;
    private long maxWeekly;
    private String msg;
    private String name;
    //private String notes;
    private String organization;
    private String password;
    private Long receivedMonth;
    private Long receivedToday;
    //  private Long receivedTotal;
    private Long receivedWeek;
    //private String reportsTo;
    private String shortCodes;
    private Long smsCountMonth;
    private Long smsCountToday;
    private Long smsCountTotal;
    private Long smsCountWeek;
    //private String staffNo;
    private Date startDate;
    private Integer superAccountId;
    private String surname;
    private Character taskadmin;
    //private String userId;
    private String username;
    private int arrears;
    private double cost_per_sms;
    private int alerted;
    private double max_total_amt;
    private int max_contacts;
    private String taskAdmin;
    private int resend_failed_sms;
    private static Map<Tuser, HttpSession> logins = new HashMap<Tuser, HttpSession>();
    private Logger logger = LoggerFactory.getLogger(Tuser.class);

    public Tuser() {

    }

    public Tuser(String agent, int alertThreshold, Date dateUpdated,
            String firstname, long lastReceivedId, boolean loggedIn, Date loggedInTime, long maxDaily, long maxMonthly,
            long maxTotal, long maxWeekly, String password, /*String staffNo,*/ String surname,
            String username, String taskAdmin, int resend_failed_sms) {

        this.resend_failed_sms = resend_failed_sms;
        this.agent = agent;
        this.alertThreshold = alertThreshold;
        this.dateUpdated = dateUpdated;
        this.firstname = firstname;
        this.lastReceivedId = lastReceivedId;
        this.loggedIn = loggedIn;
        this.loggedInTime = loggedInTime;
        this.maxDaily = maxDaily;
        this.maxMonthly = maxMonthly;
        this.maxTotal = maxTotal;
        this.maxWeekly = maxWeekly;
        this.password = password;
        //this.staffNo = staffNo;
        this.surname = surname;
        this.username = username;
        this.taskAdmin = taskAdmin;
    }

    public Tuser(Character admin, int alerted, int arrears, double cost_per_sms, String agent, int alertThreshold, String contactNumber,
            String contractNum, Date dateUpdated, /*Integer departmentNo,*/ String destinationAddr,
            String emailAddress, Boolean enableEmailAlert, Date endDate, String firstname, /*Integer jobTitleNo,*/
            Date lastReceived, long lastReceivedId, Date lastSend, Long lastSentId, boolean loggedIn,
            Date loggedInTime, long maxDaily, long maxMonthly, long maxTotal, long maxWeekly, String msg,
            String name, /*String notes,*/ String organization, String password, Long receivedMonth,
            Long receivedToday, Long receivedTotal, Long receivedWeek, /*String reportsTo,*/ String shortCodes,
            Long smsCountMonth, Long smsCountToday, Long smsCountTotal, Long smsCountWeek,
            /*String staffNo,*/ Date startDate, Integer superAccountId, String surname,
            Character taskadmin, /*String userId,*/ String username, String taskAdmin, int resend_failed_sms) {

        this.resend_failed_sms = resend_failed_sms;
        this.admin = admin;
        this.agent = agent;
        this.alertThreshold = alertThreshold;
        this.contactNumber = contactNumber;
        this.contractNum = contractNum;
        this.dateUpdated = dateUpdated;
        this.destinationAddr = destinationAddr;
        this.emailAddress = emailAddress;
        this.enableEmailAlert = enableEmailAlert;
        this.endDate = endDate;
        this.firstname = firstname;
        this.lastReceived = lastReceived;
        this.lastReceivedId = lastReceivedId;
        this.lastSend = lastSend;
        this.lastSentId = lastSentId;
        this.loggedIn = loggedIn;
        this.loggedInTime = loggedInTime;
        this.maxDaily = maxDaily;
        this.maxMonthly = maxMonthly;
        this.maxTotal = maxTotal;
        this.maxWeekly = maxWeekly;
        this.msg = msg;
        this.name = name;
        this.organization = organization;
        this.password = password;
        this.receivedMonth = receivedMonth;
        this.receivedToday = receivedToday;
        this.receivedWeek = receivedWeek;
        this.shortCodes = shortCodes;
        this.smsCountMonth = smsCountMonth;
        this.smsCountToday = smsCountToday;
        this.smsCountTotal = smsCountTotal;
        this.smsCountWeek = smsCountWeek;
        this.startDate = startDate;
        this.superAccountId = superAccountId;
        this.surname = surname;
        this.taskadmin = taskadmin;
        this.username = username;
        this.cost_per_sms = cost_per_sms;
        this.arrears = arrears;
        this.alerted = alerted;
        this.taskAdmin = taskAdmin;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "admin", length = 1)
    public Character getAdmin() {
        return this.admin;
    }

    public void setAdmin(Character admin) {
        this.admin = admin;
    }

    @Column(name = "agent", nullable = false, length = 100)
    public String getAgent() {
        return this.agent;
    }

    public void setAgent(String agent) {
        this.agent = agent;
    }

    @Column(name = "alertThreshold", nullable = false)
    public int getAlertThreshold() {
        return this.alertThreshold;
    }

    public void setAlertThreshold(int alertThreshold) {
        this.alertThreshold = alertThreshold;
    }

    @Column(name = "contact_number", length = 20)
    public String getContactNumber() {
        return this.contactNumber;
    }

    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    @Column(name = "contract_num", length = 20)
    public String getContractNum() {
        return this.contractNum;
    }

    public void setContractNum(String contractNum) {
        this.contractNum = contractNum;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "date_updated", nullable = false, length = 19)
    public Date getDateUpdated() {
        return this.dateUpdated;
    }

    public void setDateUpdated(Date dateUpdated) {
        this.dateUpdated = dateUpdated;
    }

    @Column(name = "destination_addr", length = 20)
    public String getDestinationAddr() {
        return this.destinationAddr;
    }

    public void setDestinationAddr(String destinationAddr) {
        this.destinationAddr = destinationAddr;
    }

    @Column(name = "email_address", length = 100)
    public String getEmailAddress() {
        return this.emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    @Column(name = "enable_email_alert")
    public Boolean getEnableEmailAlert() {
        return this.enableEmailAlert;
    }

    public void setEnableEmailAlert(Boolean enableEmailAlert) {
        this.enableEmailAlert = enableEmailAlert;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_date", length = 19)
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Column(name = "firstname", nullable = false, length = 100)
    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_received", length = 19)
    public Date getLastReceived() {
        return this.lastReceived;
    }

    public void setLastReceived(Date lastReceived) {
        this.lastReceived = lastReceived;
    }

    @Column(name = "last_received_id", nullable = false)
    public long getLastReceivedId() {
        return this.lastReceivedId;
    }

    public void setLastReceivedId(long lastReceivedId) {
        this.lastReceivedId = lastReceivedId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_send", length = 19)
    public Date getLastSend() {
        return this.lastSend;
    }

    public void setLastSend(Date lastSend) {
        this.lastSend = lastSend;
    }

    @Column(name = "last_sent_id")
    public Long getLastSentId() {
        return this.lastSentId;
    }

    public void setLastSentId(Long lastSentId) {
        this.lastSentId = lastSentId;
    }

    @Column(name = "logged_in", nullable = false)
    public boolean isLoggedIn() {
        return this.loggedIn;
    }

    public void setLoggedIn(boolean loggedIn) {
        this.loggedIn = loggedIn;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "logged_in_time", nullable = false, length = 19)
    public Date getLoggedInTime() {
        return this.loggedInTime;
    }

    public void setLoggedInTime(Date loggedInTime) {
        this.loggedInTime = loggedInTime;
    }

    @Column(name = "max_daily", nullable = false)
    public long getMaxDaily() {
        return this.maxDaily;
    }

    public void setMaxDaily(long maxDaily) {
        this.maxDaily = maxDaily;
    }

    @Column(name = "max_monthly", nullable = false)
    public long getMaxMonthly() {
        return this.maxMonthly;
    }

    public void setMaxMonthly(long maxMonthly) {
        this.maxMonthly = maxMonthly;
    }

    @Column(name = "max_total", nullable = false)
    public long getMaxTotal() {
        return this.maxTotal;
    }

    public void setMaxTotal(long maxTotal) {
        this.maxTotal = maxTotal;
    }

    @Column(name = "max_weekly", nullable = false)
    public long getMaxWeekly() {
        return this.maxWeekly;
    }

    public void setMaxWeekly(long maxWeekly) {
        this.maxWeekly = maxWeekly;
    }

    @Column(name = "msg", length = 100)
    public String getMsg() {
        return this.msg;
    }

    public void setMsg(String msg) {
        this.msg = msg;
    }

    @Column(name = "name", length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /*    @Column(name = "notes")
    public String getNotes() {
    return this.notes;
    }
    
    public void setNotes(String notes) {
    this.notes = notes;
    }*/
    @Column(name = "organization")
    public String getOrganization() {
        return this.organization;
    }

    public void setOrganization(String organization) {
        this.organization = organization;
    }

    @Column(name = "password", nullable = false, length = 100)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "received_month")
    public Long getReceivedMonth() {
        return this.receivedMonth;
    }

    public void setReceivedMonth(Long receivedMonth) {
        this.receivedMonth = receivedMonth;
    }

    @Column(name = "received_today")
    public Long getReceivedToday() {
        return this.receivedToday;
    }

    public void setReceivedToday(Long receivedToday) {
        this.receivedToday = receivedToday;
    }

    @Column(name = "received_week")
    public Long getReceivedWeek() {
        return this.receivedWeek;
    }

    public void setReceivedWeek(Long receivedWeek) {
        this.receivedWeek = receivedWeek;
    }

    @Column(name = "short_codes", length = 250)
    public String getShortCodes() {
        return this.shortCodes;
    }

    public void setShortCodes(String shortCodes) {
        this.shortCodes = shortCodes;
    }

    @Column(name = "sms_count_month")
    public Long getSmsCountMonth() {
        return this.smsCountMonth;
    }

    public void setSmsCountMonth(Long smsCountMonth) {
        this.smsCountMonth = smsCountMonth;
    }

    @Column(name = "sms_count_today")
    public Long getSmsCountToday() {
        return this.smsCountToday;
    }

    public void setSmsCountToday(Long smsCountToday) {
        this.smsCountToday = smsCountToday;
    }

    @Column(name = "sms_count_total")
    public Long getSmsCountTotal() {
        return this.smsCountTotal;
    }

    public void setSmsCountTotal(Long smsCountTotal) {
        this.smsCountTotal = smsCountTotal;
    }

    @Column(name = "sms_count_week")
    public Long getSmsCountWeek() {
        return this.smsCountWeek;
    }

    public void setSmsCountWeek(Long smsCountWeek) {
        this.smsCountWeek = smsCountWeek;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_date", length = 19)
    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Column(name = "super_account_id")
    public Integer getSuperAccountId() {
        return this.superAccountId;
    }

    public void setSuperAccountId(Integer superAccountId) {
        this.superAccountId = superAccountId;
    }

    @Column(name = "surname", nullable = false, length = 100)
    public String getSurname() {
        return this.surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    @Column(name = "taskadmin", length = 1)
    public Character getTaskadmin() {
        return this.taskadmin;
    }

    public void setTaskadmin(Character taskadmin) {
        this.taskadmin = taskadmin;
    }

    @Column(name = "username", unique = true, nullable = false, length = 100)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "arrears", nullable = true)
    public int getArrears() {
        return arrears;
    }

    public void setArrears(int arrears) {
        this.arrears = arrears;
    }

    @Column(name = "cost_per_sms", nullable = true)
    public double getCost_per_sms() {
        return cost_per_sms;
    }

    public void setCost_per_sms(double cost_per_sms) {
        this.cost_per_sms = cost_per_sms;
    }

    @Column(name = "alerted", nullable = true, length = 255)
    public int getAlerted() {
        return alerted;
    }

    public void setAlerted(int alerted) {
        this.alerted = alerted;
    }

    @Column(name = "max_contacts", nullable = false)
    public int getMax_contacts() {
        return max_contacts;
    }

    public void setMax_contacts(int max_contacts) {
        this.max_contacts = max_contacts;
    }

    @Column(name = "max_total_amt", nullable = false)
    public double getMax_total_amt() {
        return max_total_amt;
    }

    @Column(name = "resend_failed_sms", nullable = false)
    public int getResend_failed_sms() {
        return resend_failed_sms;
    }

    public void setResend_failed_sms(int resend_failed_sms) {
        this.resend_failed_sms = resend_failed_sms;
    }

    public void setMax_total_amt(double max_total_amt) {
        this.max_total_amt = max_total_amt;
    }

    @Override
    public String toString() {
        return "Tuser{" + "id=" + id + ", admin=" + admin + ", agent=" + agent + ", alertThreshold=" + alertThreshold + ", contactNumber=" + contactNumber + ", contractNum=" + contractNum + ", dateUpdated=" + dateUpdated + ", destinationAddr=" + destinationAddr + ", emailAddress=" + emailAddress + ", enableEmailAlert=" + enableEmailAlert + ", endDate=" + endDate + ", firstname=" + firstname + ", lastReceived=" + lastReceived + ", lastReceivedId=" + lastReceivedId + ", lastSend=" + lastSend + ", lastSentId=" + lastSentId + ", loggedIn=" + loggedIn + ", loggedInTime=" + loggedInTime + ", maxDaily=" + maxDaily + ", maxMonthly=" + maxMonthly + ", maxTotal=" + maxTotal + ", maxWeekly=" + maxWeekly + ", msg=" + msg + ", name=" + name + ", organization=" + organization + ", password=" + password + ", receivedMonth=" + receivedMonth + ", receivedToday=" + receivedToday + ", receivedWeek=" + receivedWeek + ", shortCodes=" + shortCodes + ", smsCountMonth=" + smsCountMonth + ", smsCountToday=" + smsCountToday + ", smsCountTotal=" + smsCountTotal + ", smsCountWeek=" + smsCountWeek + ", startDate=" + startDate + ", superAccountId=" + superAccountId + ", surname=" + surname + ", taskadmin=" + taskadmin + ", username=" + username + ", arrears=" + arrears + ", cost_per_sms=" + cost_per_sms + ", alerted=" + alerted + ", max_total_amt=" + max_total_amt + ", taskAdmin=" + taskAdmin + ", resend_failed_sms=" + resend_failed_sms + '}';
    }

    @Override
    public void valueBound(HttpSessionBindingEvent event) {
        HttpSession session = logins.remove(this);
        if (session != null) {
            session.invalidate();
        }
        logins.put(this, event.getSession());
    }

    @Override
    public void valueUnbound(HttpSessionBindingEvent event) {
        logins.remove(this);
    }

}
